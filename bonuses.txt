BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers

1.In timer function and in initialize freeze time for players.
2.in dealer class, in timer function and in setsToCheck - to initialize freeze time for players.
in player class, in penalty and point.
3.We ran the program a few times, each time with configurations changes.

--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.

1.The creation of the players threads(and ai threads) was in ascending order, after each creation dealer thread was forced to sleep for 50 mili-sec. In that time player thread created and interupted dealer when hw was ready. after catching the interupt the dealer proceed to create the next thread.
The termination of the threads was conducted in descending order, after each 'player.terminate' we used 'playerthread.join'.
In player's ai creation the player was forced to sleep for 2 mili-second after ai start.
2.dealer.run, player.createArtificialIntelligence.
3.We ran the program a few times and checked the log.

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

"We are not entitled to this bonus."

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

1.Dealer-slept for short time period, because he was in charge of the timer update, release players from freeze and checkSet if he was interupted(sleep or awake).
Player-sleeps for a whole round unless he's interuppted by keyPress - human or ai.
2.player.run and dealer.run.
3.We wrote the code in a way which some major functions are done only after intrrupting the threads. We ran the program a few times and it seems that those functions work properly.

